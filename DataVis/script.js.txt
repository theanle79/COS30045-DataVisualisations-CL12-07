// Set the dimensions and margins of the graph
const margin = {top: 10, right: 30, bottom: 30, left: 60},
    width = 800 - margin.left - margin.right,
    height = 600 - margin.top - margin.bottom;

// Append the svg object to the body of the page
const svg = d3.select("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform", `translate(${margin.left},${margin.top})`);

// Read the data
d3.csv("health_data.csv", function(data) {

    // Add X axis
    const x = d3.scaleLinear()
        .domain([0, 20])  // Replace with your data's specific range
        .range([ 0, width ]);
    svg.append("g")
        .attr("transform", `translate(0,${height})`)
        .call(d3.axisBottom(x));

    // Add Y axis
    const y = d3.scaleLinear()
        .domain([0, 100])  // Replace with your data's specific range
        .range([ height, 0]);
    svg.append("g")
        .call(d3.axisLeft(y));

    // Update function
    function update(selectedYear) {
        const dataFiltered = data.filter(d => d.year == selectedYear);

        // Create the u variable
        const u = svg.selectAll(".dot")
            .data(dataFiltered);

        u.enter()
            .append("circle")
            .attr("class", "dot")
            .merge(u)
            .transition()
            .duration(1000)
            .attr("cx", function(d) { return x(d.expenditure); })
            .attr("cy", function(d) { return y(d.utilization); })
            .attr("r", 5)
            .attr("fill", "#69b3a2");

        u.exit().remove();
    }

    // Initialize plot
    update(2010);

    // When the slider changes, update the chart
    d3.select("#yearSlider").on("input", function(event) {
        const year = this.value;
        update(year);
        d3.select("#yearValue").text(year);
    });
});

